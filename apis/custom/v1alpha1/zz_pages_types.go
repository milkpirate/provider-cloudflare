// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PagesInitParameters struct {

	// (String) Managed state of the custom page. Available values: default, customized.
	// Managed state of the custom page. Available values: `default`, `customized`.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (String) The type of custom page you wish to update. Available values: basic_challenge, waf_challenge, waf_block, ratelimit_block, country_challenge, ip_block, under_attack, 500_errors, 1000_errors, managed_challenge.
	// The type of custom page you wish to update. Available values: `basic_challenge`, `waf_challenge`, `waf_block`, `ratelimit_block`, `country_challenge`, `ip_block`, `under_attack`, `500_errors`, `1000_errors`, `managed_challenge`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) URL of where the custom page source is located.
	// URL of where the custom page source is located.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type PagesObservation struct {

	// (String) The account identifier to target for the resource. Conflicts with zone_id.
	// The account identifier to target for the resource. Conflicts with `zone_id`.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Managed state of the custom page. Available values: default, customized.
	// Managed state of the custom page. Available values: `default`, `customized`.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (String) The type of custom page you wish to update. Available values: basic_challenge, waf_challenge, waf_block, ratelimit_block, country_challenge, ip_block, under_attack, 500_errors, 1000_errors, managed_challenge.
	// The type of custom page you wish to update. Available values: `basic_challenge`, `waf_challenge`, `waf_block`, `ratelimit_block`, `country_challenge`, `ip_block`, `under_attack`, `500_errors`, `1000_errors`, `managed_challenge`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) URL of where the custom page source is located.
	// URL of where the custom page source is located.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// (String) The zone identifier to target for the resource. Conflicts with account_id.
	// The zone identifier to target for the resource. Conflicts with `account_id`.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type PagesParameters struct {

	// (String) The account identifier to target for the resource. Conflicts with zone_id.
	// The account identifier to target for the resource. Conflicts with `zone_id`.
	// +crossplane:generate:reference:type=github.com/milkpirate/provider-cloudflare/apis/account/v1alpha1.Account
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Reference to a Account in account to populate accountId.
	// +kubebuilder:validation:Optional
	AccountIDRef *v1.Reference `json:"accountIdRef,omitempty" tf:"-"`

	// Selector for a Account in account to populate accountId.
	// +kubebuilder:validation:Optional
	AccountIDSelector *v1.Selector `json:"accountIdSelector,omitempty" tf:"-"`

	// (String) Managed state of the custom page. Available values: default, customized.
	// Managed state of the custom page. Available values: `default`, `customized`.
	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (String) The type of custom page you wish to update. Available values: basic_challenge, waf_challenge, waf_block, ratelimit_block, country_challenge, ip_block, under_attack, 500_errors, 1000_errors, managed_challenge.
	// The type of custom page you wish to update. Available values: `basic_challenge`, `waf_challenge`, `waf_block`, `ratelimit_block`, `country_challenge`, `ip_block`, `under_attack`, `500_errors`, `1000_errors`, `managed_challenge`.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) URL of where the custom page source is located.
	// URL of where the custom page source is located.
	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// (String) The zone identifier to target for the resource. Conflicts with account_id.
	// The zone identifier to target for the resource. Conflicts with `account_id`.
	// +crossplane:generate:reference:type=github.com/milkpirate/provider-cloudflare/apis/zone/v1alpha1.Zone
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`

	// Reference to a Zone in zone to populate zoneId.
	// +kubebuilder:validation:Optional
	ZoneIDRef *v1.Reference `json:"zoneIdRef,omitempty" tf:"-"`

	// Selector for a Zone in zone to populate zoneId.
	// +kubebuilder:validation:Optional
	ZoneIDSelector *v1.Selector `json:"zoneIdSelector,omitempty" tf:"-"`
}

// PagesSpec defines the desired state of Pages
type PagesSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PagesParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PagesInitParameters `json:"initProvider,omitempty"`
}

// PagesStatus defines the observed state of Pages.
type PagesStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PagesObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Pages is the Schema for the Pagess API. Provides a resource which manages Cloudflare custom error pages.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare}
type Pages struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.url) || (has(self.initProvider) && has(self.initProvider.url))",message="spec.forProvider.url is a required parameter"
	Spec   PagesSpec   `json:"spec"`
	Status PagesStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PagesList contains a list of Pagess
type PagesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Pages `json:"items"`
}

// Repository type metadata.
var (
	Pages_Kind             = "Pages"
	Pages_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Pages_Kind}.String()
	Pages_KindAPIVersion   = Pages_Kind + "." + CRDGroupVersion.String()
	Pages_GroupVersionKind = CRDGroupVersion.WithKind(Pages_Kind)
)

func init() {
	SchemeBuilder.Register(&Pages{}, &PagesList{})
}
