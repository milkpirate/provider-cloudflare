// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LoadSheddingInitParameters struct {

	// 100. Defaults to 0.
	// Percent of traffic to shed 0 - 100. Defaults to `0`.
	DefaultPercent *float64 `json:"defaultPercent,omitempty" tf:"default_percent,omitempty"`

	// (String) Method of shedding traffic. Available values: "", hash, random. Defaults to "".
	// Method of shedding traffic. Available values: `""`, `hash`, `random`. Defaults to `""`.
	DefaultPolicy *string `json:"defaultPolicy,omitempty" tf:"default_policy,omitempty"`

	// 100. Defaults to 0.
	// Percent of session traffic to shed 0 - 100. Defaults to `0`.
	SessionPercent *float64 `json:"sessionPercent,omitempty" tf:"session_percent,omitempty"`

	// (String) Method of shedding traffic. Available values: "", hash. Defaults to "".
	// Method of shedding traffic. Available values: `""`, `hash`. Defaults to `""`.
	SessionPolicy *string `json:"sessionPolicy,omitempty" tf:"session_policy,omitempty"`
}

type LoadSheddingObservation struct {

	// 100. Defaults to 0.
	// Percent of traffic to shed 0 - 100. Defaults to `0`.
	DefaultPercent *float64 `json:"defaultPercent,omitempty" tf:"default_percent,omitempty"`

	// (String) Method of shedding traffic. Available values: "", hash, random. Defaults to "".
	// Method of shedding traffic. Available values: `""`, `hash`, `random`. Defaults to `""`.
	DefaultPolicy *string `json:"defaultPolicy,omitempty" tf:"default_policy,omitempty"`

	// 100. Defaults to 0.
	// Percent of session traffic to shed 0 - 100. Defaults to `0`.
	SessionPercent *float64 `json:"sessionPercent,omitempty" tf:"session_percent,omitempty"`

	// (String) Method of shedding traffic. Available values: "", hash. Defaults to "".
	// Method of shedding traffic. Available values: `""`, `hash`. Defaults to `""`.
	SessionPolicy *string `json:"sessionPolicy,omitempty" tf:"session_policy,omitempty"`
}

type LoadSheddingParameters struct {

	// 100. Defaults to 0.
	// Percent of traffic to shed 0 - 100. Defaults to `0`.
	// +kubebuilder:validation:Optional
	DefaultPercent *float64 `json:"defaultPercent,omitempty" tf:"default_percent,omitempty"`

	// (String) Method of shedding traffic. Available values: "", hash, random. Defaults to "".
	// Method of shedding traffic. Available values: `""`, `hash`, `random`. Defaults to `""`.
	// +kubebuilder:validation:Optional
	DefaultPolicy *string `json:"defaultPolicy,omitempty" tf:"default_policy,omitempty"`

	// 100. Defaults to 0.
	// Percent of session traffic to shed 0 - 100. Defaults to `0`.
	// +kubebuilder:validation:Optional
	SessionPercent *float64 `json:"sessionPercent,omitempty" tf:"session_percent,omitempty"`

	// (String) Method of shedding traffic. Available values: "", hash. Defaults to "".
	// Method of shedding traffic. Available values: `""`, `hash`. Defaults to `""`.
	// +kubebuilder:validation:Optional
	SessionPolicy *string `json:"sessionPolicy,omitempty" tf:"session_policy,omitempty"`
}

type OriginSteeringInitParameters struct {

	// Connecting-IP address. Value least_outstanding_requests selects an origin by taking into consideration origin weights, as well as each origin's number of outstanding requests. Origins with more pending requests are weighted proportionately less relative to others. Value least_connections selects an origin by taking into consideration origin weights, as well as each origin's number of open connections. Origins with more open connections are weighted proportionately less relative to others. Supported for HTTP/1 and HTTP/2 connections. Available values: "", hash, random, least_outstanding_requests, least_connections. Defaults to random.
	// Origin steering policy to be used. Value `random` selects an origin randomly. Value `hash` selects an origin by computing a hash over the CF-Connecting-IP address. Value `least_outstanding_requests` selects an origin by taking into consideration origin weights, as well as each origin's number of outstanding requests. Origins with more pending requests are weighted proportionately less relative to others. Value `least_connections` selects an origin by taking into consideration origin weights, as well as each origin's number of open connections. Origins with more open connections are weighted proportionately less relative to others. Supported for HTTP/1 and HTTP/2 connections. Available values: `""`, `hash`, `random`, `least_outstanding_requests`, `least_connections`. Defaults to `random`.
	Policy *string `json:"policy,omitempty" tf:"policy,omitempty"`
}

type OriginSteeringObservation struct {

	// Connecting-IP address. Value least_outstanding_requests selects an origin by taking into consideration origin weights, as well as each origin's number of outstanding requests. Origins with more pending requests are weighted proportionately less relative to others. Value least_connections selects an origin by taking into consideration origin weights, as well as each origin's number of open connections. Origins with more open connections are weighted proportionately less relative to others. Supported for HTTP/1 and HTTP/2 connections. Available values: "", hash, random, least_outstanding_requests, least_connections. Defaults to random.
	// Origin steering policy to be used. Value `random` selects an origin randomly. Value `hash` selects an origin by computing a hash over the CF-Connecting-IP address. Value `least_outstanding_requests` selects an origin by taking into consideration origin weights, as well as each origin's number of outstanding requests. Origins with more pending requests are weighted proportionately less relative to others. Value `least_connections` selects an origin by taking into consideration origin weights, as well as each origin's number of open connections. Origins with more open connections are weighted proportionately less relative to others. Supported for HTTP/1 and HTTP/2 connections. Available values: `""`, `hash`, `random`, `least_outstanding_requests`, `least_connections`. Defaults to `random`.
	Policy *string `json:"policy,omitempty" tf:"policy,omitempty"`
}

type OriginSteeringParameters struct {

	// Connecting-IP address. Value least_outstanding_requests selects an origin by taking into consideration origin weights, as well as each origin's number of outstanding requests. Origins with more pending requests are weighted proportionately less relative to others. Value least_connections selects an origin by taking into consideration origin weights, as well as each origin's number of open connections. Origins with more open connections are weighted proportionately less relative to others. Supported for HTTP/1 and HTTP/2 connections. Available values: "", hash, random, least_outstanding_requests, least_connections. Defaults to random.
	// Origin steering policy to be used. Value `random` selects an origin randomly. Value `hash` selects an origin by computing a hash over the CF-Connecting-IP address. Value `least_outstanding_requests` selects an origin by taking into consideration origin weights, as well as each origin's number of outstanding requests. Origins with more pending requests are weighted proportionately less relative to others. Value `least_connections` selects an origin by taking into consideration origin weights, as well as each origin's number of open connections. Origins with more open connections are weighted proportionately less relative to others. Supported for HTTP/1 and HTTP/2 connections. Available values: `""`, `hash`, `random`, `least_outstanding_requests`, `least_connections`. Defaults to `random`.
	// +kubebuilder:validation:Optional
	Policy *string `json:"policy,omitempty" tf:"policy,omitempty"`
}

type OriginsHeaderInitParameters struct {

	// (Block Set) HTTP request headers. (see below for nested schema)
	// HTTP Header name.
	Header *string `json:"header,omitempty" tf:"header,omitempty"`

	// (Set of String) Values for the HTTP headers.
	// Values for the HTTP headers.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type OriginsHeaderObservation struct {

	// (Block Set) HTTP request headers. (see below for nested schema)
	// HTTP Header name.
	Header *string `json:"header,omitempty" tf:"header,omitempty"`

	// (Set of String) Values for the HTTP headers.
	// Values for the HTTP headers.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type OriginsHeaderParameters struct {

	// (Block Set) HTTP request headers. (see below for nested schema)
	// HTTP Header name.
	// +kubebuilder:validation:Optional
	Header *string `json:"header" tf:"header,omitempty"`

	// (Set of String) Values for the HTTP headers.
	// Values for the HTTP headers.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type OriginsInitParameters struct {

	// (String) The IP address (IPv4 or IPv6) of the origin, or the publicly addressable hostname.
	// The IP address (IPv4 or IPv6) of the origin, or the publicly addressable hostname.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// (Boolean) Whether to enable (the default) this pool. Disabled pools will not receive traffic and are excluded from health checks. Disabling a pool will cause any load balancers using it to failover to the next pool (if any). Defaults to true.
	// Whether this origin is enabled. Disabled origins will not receive traffic and are excluded from health checks. Defaults to `true`.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block Set) HTTP request headers. (see below for nested schema)
	// HTTP request headers.
	Header []OriginsHeaderInitParameters `json:"header,omitempty" tf:"header,omitempty"`

	// (String) A short name (tag) for the pool.
	// A human-identifiable name for the origin.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// 1.00) of this origin, relative to other origins in the pool. Equal values mean equal weighting. A weight of 0 means traffic will not be sent to this origin, but health is still checked. When origin_steering.policy="least_outstanding_requests", weight is used to scale the origin's outstanding requests. When origin_steering.policy="least_connections", weight is used to scale the origin's open connections. Defaults to 1.
	// The weight (0.01 - 1.00) of this origin, relative to other origins in the pool. Equal values mean equal weighting. A weight of 0 means traffic will not be sent to this origin, but health is still checked. When [`origin_steering.policy="least_outstanding_requests"`](#policy), weight is used to scale the origin's outstanding requests. When [`origin_steering.policy="least_connections"`](#policy), weight is used to scale the origin's open connections. Defaults to `1`.
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type OriginsObservation struct {

	// (String) The IP address (IPv4 or IPv6) of the origin, or the publicly addressable hostname.
	// The IP address (IPv4 or IPv6) of the origin, or the publicly addressable hostname.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// (Boolean) Whether to enable (the default) this pool. Disabled pools will not receive traffic and are excluded from health checks. Disabling a pool will cause any load balancers using it to failover to the next pool (if any). Defaults to true.
	// Whether this origin is enabled. Disabled origins will not receive traffic and are excluded from health checks. Defaults to `true`.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block Set) HTTP request headers. (see below for nested schema)
	// HTTP request headers.
	Header []OriginsHeaderObservation `json:"header,omitempty" tf:"header,omitempty"`

	// (String) A short name (tag) for the pool.
	// A human-identifiable name for the origin.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// 1.00) of this origin, relative to other origins in the pool. Equal values mean equal weighting. A weight of 0 means traffic will not be sent to this origin, but health is still checked. When origin_steering.policy="least_outstanding_requests", weight is used to scale the origin's outstanding requests. When origin_steering.policy="least_connections", weight is used to scale the origin's open connections. Defaults to 1.
	// The weight (0.01 - 1.00) of this origin, relative to other origins in the pool. Equal values mean equal weighting. A weight of 0 means traffic will not be sent to this origin, but health is still checked. When [`origin_steering.policy="least_outstanding_requests"`](#policy), weight is used to scale the origin's outstanding requests. When [`origin_steering.policy="least_connections"`](#policy), weight is used to scale the origin's open connections. Defaults to `1`.
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type OriginsParameters struct {

	// (String) The IP address (IPv4 or IPv6) of the origin, or the publicly addressable hostname.
	// The IP address (IPv4 or IPv6) of the origin, or the publicly addressable hostname.
	// +kubebuilder:validation:Optional
	Address *string `json:"address" tf:"address,omitempty"`

	// (Boolean) Whether to enable (the default) this pool. Disabled pools will not receive traffic and are excluded from health checks. Disabling a pool will cause any load balancers using it to failover to the next pool (if any). Defaults to true.
	// Whether this origin is enabled. Disabled origins will not receive traffic and are excluded from health checks. Defaults to `true`.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block Set) HTTP request headers. (see below for nested schema)
	// HTTP request headers.
	// +kubebuilder:validation:Optional
	Header []OriginsHeaderParameters `json:"header,omitempty" tf:"header,omitempty"`

	// (String) A short name (tag) for the pool.
	// A human-identifiable name for the origin.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// 1.00) of this origin, relative to other origins in the pool. Equal values mean equal weighting. A weight of 0 means traffic will not be sent to this origin, but health is still checked. When origin_steering.policy="least_outstanding_requests", weight is used to scale the origin's outstanding requests. When origin_steering.policy="least_connections", weight is used to scale the origin's open connections. Defaults to 1.
	// The weight (0.01 - 1.00) of this origin, relative to other origins in the pool. Equal values mean equal weighting. A weight of 0 means traffic will not be sent to this origin, but health is still checked. When [`origin_steering.policy="least_outstanding_requests"`](#policy), weight is used to scale the origin's outstanding requests. When [`origin_steering.policy="least_connections"`](#policy), weight is used to scale the origin's open connections. Defaults to `1`.
	// +kubebuilder:validation:Optional
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type PoolInitParameters struct {

	// (Set of String) A list of regions (specified by region code) from which to run health checks. Empty means every Cloudflare data center (the default), but requires an Enterprise plan. Region codes can be found here.
	// A list of regions (specified by region code) from which to run health checks. Empty means every Cloudflare data center (the default), but requires an Enterprise plan. Region codes can be found [here](https://developers.cloudflare.com/load-balancing/reference/region-mapping-api).
	CheckRegions []*string `json:"checkRegions,omitempty" tf:"check_regions,omitempty"`

	// (String) Free text description.
	// Free text description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Whether to enable (the default) this pool. Disabled pools will not receive traffic and are excluded from health checks. Disabling a pool will cause any load balancers using it to failover to the next pool (if any). Defaults to true.
	// Whether to enable (the default) this pool. Disabled pools will not receive traffic and are excluded from health checks. Disabling a pool will cause any load balancers using it to failover to the next pool (if any). Defaults to `true`.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) The latitude this pool is physically located at; used for proximity steering.
	// The latitude this pool is physically located at; used for proximity steering.
	Latitude *float64 `json:"latitude,omitempty" tf:"latitude,omitempty"`

	// (Block Set) Setting for controlling load shedding for this pool. (see below for nested schema)
	// Setting for controlling load shedding for this pool.
	LoadShedding []LoadSheddingInitParameters `json:"loadShedding,omitempty" tf:"load_shedding,omitempty"`

	// (Number) The longitude this pool is physically located at; used for proximity steering.
	// The longitude this pool is physically located at; used for proximity steering.
	Longitude *float64 `json:"longitude,omitempty" tf:"longitude,omitempty"`

	// (Number) The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and we will failover to the next available pool. Defaults to 1.
	// The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and we will failover to the next available pool. Defaults to `1`.
	MinimumOrigins *float64 `json:"minimumOrigins,omitempty" tf:"minimum_origins,omitempty"`

	// (String) A short name (tag) for the pool.
	// A short name (tag) for the pool.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The email address to send health status notifications to. This can be an individual mailbox or a mailing list. Multiple emails can be supplied as a comma delimited list.
	// The email address to send health status notifications to. This can be an individual mailbox or a mailing list. Multiple emails can be supplied as a comma delimited list.
	NotificationEmail *string `json:"notificationEmail,omitempty" tf:"notification_email,omitempty"`

	// (Block Set) Set an origin steering policy to control origin selection within a pool. (see below for nested schema)
	// Set an origin steering policy to control origin selection within a pool.
	OriginSteering []OriginSteeringInitParameters `json:"originSteering,omitempty" tf:"origin_steering,omitempty"`

	// (Block Set, Min: 1) The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy. (see below for nested schema)
	// The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy.
	Origins []OriginsInitParameters `json:"origins,omitempty" tf:"origins,omitempty"`
}

type PoolObservation struct {

	// (String) The account identifier to target for the resource.
	// The account identifier to target for the resource.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (Set of String) A list of regions (specified by region code) from which to run health checks. Empty means every Cloudflare data center (the default), but requires an Enterprise plan. Region codes can be found here.
	// A list of regions (specified by region code) from which to run health checks. Empty means every Cloudflare data center (the default), but requires an Enterprise plan. Region codes can be found [here](https://developers.cloudflare.com/load-balancing/reference/region-mapping-api).
	CheckRegions []*string `json:"checkRegions,omitempty" tf:"check_regions,omitempty"`

	// (String) The RFC3339 timestamp of when the load balancer was created.
	// The RFC3339 timestamp of when the load balancer was created.
	CreatedOn *string `json:"createdOn,omitempty" tf:"created_on,omitempty"`

	// (String) Free text description.
	// Free text description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Whether to enable (the default) this pool. Disabled pools will not receive traffic and are excluded from health checks. Disabling a pool will cause any load balancers using it to failover to the next pool (if any). Defaults to true.
	// Whether to enable (the default) this pool. Disabled pools will not receive traffic and are excluded from health checks. Disabling a pool will cause any load balancers using it to failover to the next pool (if any). Defaults to `true`.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Number) The latitude this pool is physically located at; used for proximity steering.
	// The latitude this pool is physically located at; used for proximity steering.
	Latitude *float64 `json:"latitude,omitempty" tf:"latitude,omitempty"`

	// (Block Set) Setting for controlling load shedding for this pool. (see below for nested schema)
	// Setting for controlling load shedding for this pool.
	LoadShedding []LoadSheddingObservation `json:"loadShedding,omitempty" tf:"load_shedding,omitempty"`

	// (Number) The longitude this pool is physically located at; used for proximity steering.
	// The longitude this pool is physically located at; used for proximity steering.
	Longitude *float64 `json:"longitude,omitempty" tf:"longitude,omitempty"`

	// (Number) The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and we will failover to the next available pool. Defaults to 1.
	// The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and we will failover to the next available pool. Defaults to `1`.
	MinimumOrigins *float64 `json:"minimumOrigins,omitempty" tf:"minimum_origins,omitempty"`

	// (String) The RFC3339 timestamp of when the load balancer was last modified.
	// The RFC3339 timestamp of when the load balancer was last modified.
	ModifiedOn *string `json:"modifiedOn,omitempty" tf:"modified_on,omitempty"`

	// (String) The ID of the Monitor to use for health checking origins within this pool.
	// The ID of the Monitor to use for health checking origins within this pool.
	Monitor *string `json:"monitor,omitempty" tf:"monitor,omitempty"`

	// (String) A short name (tag) for the pool.
	// A short name (tag) for the pool.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The email address to send health status notifications to. This can be an individual mailbox or a mailing list. Multiple emails can be supplied as a comma delimited list.
	// The email address to send health status notifications to. This can be an individual mailbox or a mailing list. Multiple emails can be supplied as a comma delimited list.
	NotificationEmail *string `json:"notificationEmail,omitempty" tf:"notification_email,omitempty"`

	// (Block Set) Set an origin steering policy to control origin selection within a pool. (see below for nested schema)
	// Set an origin steering policy to control origin selection within a pool.
	OriginSteering []OriginSteeringObservation `json:"originSteering,omitempty" tf:"origin_steering,omitempty"`

	// (Block Set, Min: 1) The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy. (see below for nested schema)
	// The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy.
	Origins []OriginsObservation `json:"origins,omitempty" tf:"origins,omitempty"`
}

type PoolParameters struct {

	// (String) The account identifier to target for the resource.
	// The account identifier to target for the resource.
	// +crossplane:generate:reference:type=github.com/milkpirate/provider-cloudflare/apis/account/v1alpha1.Account
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Reference to a Account in account to populate accountId.
	// +kubebuilder:validation:Optional
	AccountIDRef *v1.Reference `json:"accountIdRef,omitempty" tf:"-"`

	// Selector for a Account in account to populate accountId.
	// +kubebuilder:validation:Optional
	AccountIDSelector *v1.Selector `json:"accountIdSelector,omitempty" tf:"-"`

	// (Set of String) A list of regions (specified by region code) from which to run health checks. Empty means every Cloudflare data center (the default), but requires an Enterprise plan. Region codes can be found here.
	// A list of regions (specified by region code) from which to run health checks. Empty means every Cloudflare data center (the default), but requires an Enterprise plan. Region codes can be found [here](https://developers.cloudflare.com/load-balancing/reference/region-mapping-api).
	// +kubebuilder:validation:Optional
	CheckRegions []*string `json:"checkRegions,omitempty" tf:"check_regions,omitempty"`

	// (String) Free text description.
	// Free text description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Whether to enable (the default) this pool. Disabled pools will not receive traffic and are excluded from health checks. Disabling a pool will cause any load balancers using it to failover to the next pool (if any). Defaults to true.
	// Whether to enable (the default) this pool. Disabled pools will not receive traffic and are excluded from health checks. Disabling a pool will cause any load balancers using it to failover to the next pool (if any). Defaults to `true`.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) The latitude this pool is physically located at; used for proximity steering.
	// The latitude this pool is physically located at; used for proximity steering.
	// +kubebuilder:validation:Optional
	Latitude *float64 `json:"latitude,omitempty" tf:"latitude,omitempty"`

	// (Block Set) Setting for controlling load shedding for this pool. (see below for nested schema)
	// Setting for controlling load shedding for this pool.
	// +kubebuilder:validation:Optional
	LoadShedding []LoadSheddingParameters `json:"loadShedding,omitempty" tf:"load_shedding,omitempty"`

	// (Number) The longitude this pool is physically located at; used for proximity steering.
	// The longitude this pool is physically located at; used for proximity steering.
	// +kubebuilder:validation:Optional
	Longitude *float64 `json:"longitude,omitempty" tf:"longitude,omitempty"`

	// (Number) The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and we will failover to the next available pool. Defaults to 1.
	// The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and we will failover to the next available pool. Defaults to `1`.
	// +kubebuilder:validation:Optional
	MinimumOrigins *float64 `json:"minimumOrigins,omitempty" tf:"minimum_origins,omitempty"`

	// (String) The ID of the Monitor to use for health checking origins within this pool.
	// The ID of the Monitor to use for health checking origins within this pool.
	// +crossplane:generate:reference:type=Monitor
	// +kubebuilder:validation:Optional
	Monitor *string `json:"monitor,omitempty" tf:"monitor,omitempty"`

	// Reference to a Monitor to populate monitor.
	// +kubebuilder:validation:Optional
	MonitorRef *v1.Reference `json:"monitorRef,omitempty" tf:"-"`

	// Selector for a Monitor to populate monitor.
	// +kubebuilder:validation:Optional
	MonitorSelector *v1.Selector `json:"monitorSelector,omitempty" tf:"-"`

	// (String) A short name (tag) for the pool.
	// A short name (tag) for the pool.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The email address to send health status notifications to. This can be an individual mailbox or a mailing list. Multiple emails can be supplied as a comma delimited list.
	// The email address to send health status notifications to. This can be an individual mailbox or a mailing list. Multiple emails can be supplied as a comma delimited list.
	// +kubebuilder:validation:Optional
	NotificationEmail *string `json:"notificationEmail,omitempty" tf:"notification_email,omitempty"`

	// (Block Set) Set an origin steering policy to control origin selection within a pool. (see below for nested schema)
	// Set an origin steering policy to control origin selection within a pool.
	// +kubebuilder:validation:Optional
	OriginSteering []OriginSteeringParameters `json:"originSteering,omitempty" tf:"origin_steering,omitempty"`

	// (Block Set, Min: 1) The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy. (see below for nested schema)
	// The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy.
	// +kubebuilder:validation:Optional
	Origins []OriginsParameters `json:"origins,omitempty" tf:"origins,omitempty"`
}

// PoolSpec defines the desired state of Pool
type PoolSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PoolParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PoolInitParameters `json:"initProvider,omitempty"`
}

// PoolStatus defines the observed state of Pool.
type PoolStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PoolObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Pool is the Schema for the Pools API. Provides a Cloudflare Load Balancer pool resource. This provides a pool of origins that can be used by a Cloudflare Load Balancer.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare}
type Pool struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.origins) || (has(self.initProvider) && has(self.initProvider.origins))",message="spec.forProvider.origins is a required parameter"
	Spec   PoolSpec   `json:"spec"`
	Status PoolStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PoolList contains a list of Pools
type PoolList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Pool `json:"items"`
}

// Repository type metadata.
var (
	Pool_Kind             = "Pool"
	Pool_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Pool_Kind}.String()
	Pool_KindAPIVersion   = Pool_Kind + "." + CRDGroupVersion.String()
	Pool_GroupVersionKind = CRDGroupVersion.WithKind(Pool_Kind)
)

func init() {
	SchemeBuilder.Register(&Pool{}, &PoolList{})
}
